// <auto-generated />
using EducationalMaterialData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EducationalMaterialData.Migrations
{
    [DbContext(typeof(EducationalMaterialDbContext))]
    partial class EducationalMaterialDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EducationalMaterialData.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            FirstName = "William",
                            LastName = "Shakespeare"
                        });
                });

            modelBuilder.Entity("EducationalMaterialData.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("Material");

                    b.HasData(
                        new
                        {
                            MaterialId = 2,
                            AuthorId = 1,
                            Description = " Course Rest API",
                            MaterialTypeId = 4,
                            Name = ".NET Core 3.1 MVC REST API - Full Course",
                            Url = "https://www.youtube.com/watch?v=fmvcAzHpsk8&t=7339s"
                        },
                        new
                        {
                            MaterialId = 3,
                            AuthorId = 1,
                            Description = "EF Core ",
                            MaterialTypeId = 5,
                            Name = "Getting Started with EF Core",
                            Url = "https://docs.microsoft.com/en-gb/ef/core/get-started/overview/first-app?tabs=netcore-cli"
                        });
                });

            modelBuilder.Entity("EducationalMaterialData.Models.MaterialType", b =>
                {
                    b.Property<int>("MaterialTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaterialTypeId");

                    b.ToTable("MaterialType");

                    b.HasData(
                        new
                        {
                            MaterialTypeId = 4,
                            Name = "MVC REST API"
                        },
                        new
                        {
                            MaterialTypeId = 5,
                            Name = "EF Core"
                        });
                });

            modelBuilder.Entity("EducationalMaterialData.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 6,
                            Description = "Good Material",
                            MaterialId = 2
                        },
                        new
                        {
                            ReviewId = 7,
                            Description = "Nice One",
                            MaterialId = 3
                        });
                });

            modelBuilder.Entity("EducationalMaterialData.Models.Material", b =>
                {
                    b.HasOne("EducationalMaterialData.Models.Author", "Authors")
                        .WithMany("Material")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationalMaterialData.Models.MaterialType", "MaterialType")
                        .WithMany("Material")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authors");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("EducationalMaterialData.Models.Review", b =>
                {
                    b.HasOne("EducationalMaterialData.Models.Material", "Material")
                        .WithMany("Reviews")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("EducationalMaterialData.Models.Author", b =>
                {
                    b.Navigation("Material");
                });

            modelBuilder.Entity("EducationalMaterialData.Models.Material", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("EducationalMaterialData.Models.MaterialType", b =>
                {
                    b.Navigation("Material");
                });
#pragma warning restore 612, 618
        }
    }
}
